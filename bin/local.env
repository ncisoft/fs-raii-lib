project=ipcbus

echo_hl()
{
  echo -e ${fg_bright_yellow}$1 ${fg_reset} >&2
}

echo_warn()
{
  echo -e ${fg_bright_red}$1 ${fg_reset} >&2
}

echo_debug()
{
  true
}

#set -e
env_key="${project}_root_dir"
echo_debug "env_key="$env_key

#generation aux script
touch /tmp/get-os-env.lua
chmod +x /tmp/get-os-env.lua
cat > /tmp/get-os-env.lua << EOC
#!/usr/bin/env lua
local env_key_name
if #arg == 0 then
    print("get-os-env.lua env_key")
    os.exit(1)
else
    env_key_name = arg[1]
end
local env_key=os.getenv(env_key_name)

print(env_key or "")
EOC

env_value=$(/tmp/get-os-env.lua $env_key)
echo_debug "env_value=$env_value"
if test "xx$env_value" = "xx"; then
  export ${project}_root_dir=`pwd`

  echo "... "
  unset -f echo_help
  echo_help()
  {
    echo "available commands: help  | deploy-local-env| init | build | clean | run"
    echo "    - type help to lookup available commands"
  }

  unset -f dump_local_env
  dump_local_env()
  {
    project=ipcbus
    env_key="${project}_root_dir"
   echo "env_key=$env_key"

    env_value=$(/tmp/get-os-env.lua $env_key)
    echo "env_value=$env_value"
  }

  alias deploy-local-env=". ${ipcbus_root_dir}/bin/local.env"
  alias init="cd $ipcbus_root_dir && make init"
  alias clean="cd $ipcbus_root_dir && make clean"
  alias build="cd $ipcbus_root_dir && make build"
  alias help="echo_help "
  alias run="make run"
  alias jump-project-root="cd $ipcbus_root_dir"
  alias project-root="cd $ipcbus_root_dir"
  echo_hl "ipcbus environment has been setup"
  echo_help
  echo "    - ipcbus_root_dir=$ipcbus_root_dir"
else
  echo_hl "ipcbus environment have been setup"
  echo_warn "reset ipcbus environment"
  unset -v ${project}_root_dir
#  unset  ${project}_root_dir
  set +ex
fi
